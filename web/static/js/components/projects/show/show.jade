.projects-show(if="{ !loading }")
  h1.header.discret-links.ellipsed
    button.btn.btn-default.btn-raised.btn-sm.stars.with-icon(
      name="star-button"
      onclick="{ handleStarProject }"
      class="{starred: project.starred, disabled: !isLoggedIn()}"
      title="{ project.starred ? 'Unstar' : 'Star' }"
    )
      i.fa.fa-star
      span { project.starsCount }
    a(href="{ project.url }" target="_blank") { project.title }
  h2.sub-header.discret-links
    .url.ellipsed(if="{ project.url }")
      a(href="{ project.url }" target="_blank") { project.url }
    .author.ellipsed
      a(href="/users/{ project.author.id }")
        img.avatar(riot-src="{ project.author.imageUrl }")
      a(href="/users/{ project.author.id }") { project.author.name }
    .category
      a.with-icon.primary-color.link(href="/categories/{ project.category.normalizedName }")
        i.icon(class="{ project.category.icon }")
        span { project.category.name }
    .actions(if="{ project.author.id === currentUser().id }")
      a.edit.btn.btn-xs.btn-default.btn-raised(href="/projects/{ project.id }/edit") Edit
      button.delete.btn.btn-xs.btn-danger.btn-raised(
        name="delete-button"
        onclick="{ handleDeleteProject }"
        class="{disabled: deleting}"
      )
        span(if="{ !deleting }") Delete
        spinner.inline(if="{ deleting }" size="{ 26 }" color="#fff")

  .well
    .description
      markdown(content="{ project }" key="description")

  comments-list(base-path="/projects/{ project.id }/comments" count="{ project.commentsCount }")

spinner(if="{ loading }")
